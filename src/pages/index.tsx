import { ShoppingItem } from '@prisma/client';
import Head from 'next/head'
import { useState } from 'react';
import ItemModal from '../components/ItemModal';
import { trpc } from '../utils/trpc';
import { HiX } from "react-icons/hi";

export default function IndexPage() {
  const { data, isLoading } = trpc.getAllItems.useQuery();
  const itemsData = data?.foundItems;

  const deleteMutation = trpc.deleteItem.useMutation();
  const editMutation = trpc.toggleCheck.useMutation();
  
  const [items, setItems] = useState<ShoppingItem[]>(itemsData as ShoppingItem[]);
  const [modalOpen, setModalOpen] = useState<boolean>(false)

  const toggleCheckItem = (id: string, checked: boolean) => {
    editMutation.mutate({ id, checked });
  }

  const deleteItem = (id: string) => {
    deleteMutation.mutate({ id });
    setItems((prev) => prev.filter((item) => item.id !== id))
  }

  if (!data || isLoading) return <p>Loading...</p>

  return (
    <div>
      <Head>
        <title>T3-Shopper</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {modalOpen && <ItemModal setModalOpen={setModalOpen} setItems={setItems} />}
      
      <main className='mx-auto my-12 max-w-3xl'>
        <div className='flex justify-between'>
          <h2 className='text-2xl font-semibold'>My Shopping List</h2>
          <button
            type='button'
            className='bg-violet-500 text-white text-sm p-2 rounded-md transition hover:bg-violet-600'
            onClick={() => setModalOpen(true)}>
            Add shopping item
          </button>
        </div>

        <ul className='mt-4'>
          {items?.map(item => {
            const { id, name, checked } = item;
            return (
              <li
                key={id}
                className="flex justify-between items-center border-b-2 p-2">
                <span
                  onClick={() => toggleCheckItem(id, checked)}
                  className={checked ? 'capitalize cursor-pointer line-through' : 'capitalize cursor-pointer'}>
                  {name}
                </span>
                <HiX onClick={() => deleteItem(id)} className='text-xl text-red-500 cursor-pointer' />
              </li>
            )
          })}
        </ul>
      </main>

    </div>
  );
}
